{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["/**\n * animateWhenVisible\n * Adds a class to elements when they enter the viewport, with optional stagger and scroll-direction support.\n *\n * @param {Object} options Configuration options\n * @param {number} options.threshold IntersectionObserver threshold\n * @param {number} options.staggerDelay Delay in ms for staggered elements\n * @param {number} options.staggerDelaySlow Delay in ms for slow staggered elements\n * @param {string} options.animationClass Class to add when visible\n * @param {string} options.staggerClass Class that marks elements to stagger\n * @param {string} options.staggerSlowClass Class that marks elements for slow stagger\n * @param {string} options.targetSelector CSS selector for target elements\n * @param {string} options.staggerContainerSelector Class or selector for stagger containers\n * @param {Function} options.onVisible Callback function called when element becomes visible\n * @param {boolean} options.observeMutations Whether to observe dynamically added elements\n * @param {boolean} options.animateOnScrollDownOnly Only animate when scrolling down\n */\nexport default function animateWhenVisible(options = {}) {\n  const cfg = {\n    threshold: 0.1,\n    staggerDelay: 100,\n    staggerDelaySlow: 250,\n    animationClass: 'awv-visible',\n    staggerClass: 'awv-stagger',\n    staggerSlowClass: 'awv-stagger-slow',\n    targetSelector: '.awv-animate',\n    staggerContainerSelector: '.awv-stagger-container',\n    onVisible: null,\n    observeMutations: true,\n    animateOnScrollDownOnly: false,\n    ...options,\n  };\n\n  const orderMap = new Map();\n  let orderCounter = 0;\n  const containerCounts = new Map();\n  let lastScrollY = window.scrollY;\n\n  const observer = new IntersectionObserver(\n    (entries) => {\n      const currentScrollY = window.scrollY;\n      const scrollingDown = currentScrollY > lastScrollY;\n      lastScrollY = currentScrollY;\n\n      entries\n        .filter((e) => e.isIntersecting)\n        .sort((a, b) => orderMap.get(a.target) - orderMap.get(b.target))\n        .forEach((entry) => {\n          if (cfg.animateOnScrollDownOnly && !scrollingDown) return;\n\n          const el = entry.target;\n          const container =\n            el.closest(cfg.staggerContainerSelector) ||\n            el.closest('section') ||\n            el.closest('nav') ||\n            document.body;\n\n          if (!containerCounts.has(container))\n            containerCounts.set(container, 0);\n          const count = containerCounts.get(container);\n          const prevVisible = container.querySelectorAll(\n            `.${cfg.animationClass}`\n          ).length;\n\n          const delay = el.classList.contains(cfg.staggerSlowClass)\n            ? `${(count - prevVisible) * cfg.staggerDelaySlow}ms`\n            : el.classList.contains(cfg.staggerClass)\n            ? `${(count - prevVisible) * cfg.staggerDelay}ms`\n            : '0ms';\n\n          requestAnimationFrame(() => {\n            el.style.transitionDelay = delay;\n            el.classList.add(cfg.animationClass);\n\n            el.addEventListener(\n              'transitionend',\n              () => (el.style.transitionDelay = '0ms'),\n              { once: true }\n            );\n\n            if (typeof cfg.onVisible === 'function') cfg.onVisible(el);\n          });\n\n          containerCounts.set(container, count + 1);\n          observer.unobserve(el);\n        });\n    },\n    { threshold: cfg.threshold }\n  );\n\n  const observeElements = (els) => {\n    els.forEach((el) => {\n      if (!orderMap.has(el)) orderMap.set(el, orderCounter++);\n      observer.observe(el);\n    });\n  };\n\n  observeElements(document.querySelectorAll(cfg.targetSelector));\n\n  let mutationObserver;\n  if (cfg.observeMutations) {\n    mutationObserver = new MutationObserver((mutations) => {\n      const newEls = [];\n      mutations.forEach((m) =>\n        m.addedNodes.forEach((n) => {\n          if (n.nodeType !== 1) return;\n          if (n.matches(cfg.targetSelector)) newEls.push(n);\n          else newEls.push(...n.querySelectorAll(cfg.targetSelector));\n        })\n      );\n      if (newEls.length) observeElements(newEls);\n    });\n    mutationObserver.observe(document.body, { childList: true, subtree: true });\n  }\n\n  return {\n    destroy() {\n      observer.disconnect();\n      if (mutationObserver) mutationObserver.disconnect();\n    },\n    refresh() {\n      observeElements(document.querySelectorAll(cfg.targetSelector));\n    },\n  };\n}\n"],"names":["animateWhenVisible","options","cfg","threshold","staggerDelay","staggerDelaySlow","animationClass","staggerClass","staggerSlowClass","targetSelector","staggerContainerSelector","onVisible","observeMutations","animateOnScrollDownOnly","orderMap","Map","orderCounter","containerCounts","lastScrollY","window","scrollY","observer","IntersectionObserver","entries","currentScrollY","scrollingDown","filter","e","isIntersecting","sort","a","b","get","target","forEach","entry","el","container","closest","document","body","has","set","count","prevVisible","querySelectorAll","length","delay","classList","contains","requestAnimationFrame","style","transitionDelay","add","addEventListener","once","unobserve","observeElements","els","observe","mutationObserver","MutationObserver","mutations","newEls","m","addedNodes","n","nodeType","matches","push","childList","subtree","destroy","disconnect","refresh"],"mappings":"yPAiBe,SAASA,mBAAmBC,EAAU,IACnD,MAAMC,EAAM,CACVC,UAAW,GACXC,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,cAChBC,aAAc,cACdC,iBAAkB,mBAClBC,eAAgB,eAChBC,yBAA0B,yBAC1BC,UAAW,KACXC,kBAAkB,EAClBC,yBAAyB,KACtBZ,GAGCa,EAAW,IAAIC,IACrB,IAAIC,EAAe,EACnB,MAAMC,EAAkB,IAAIF,IAC5B,IAAIG,EAAcC,OAAOC,QAEzB,MAAMC,EAAW,IAAIC,qBAClBC,IACC,MAAMC,EAAiBL,OAAOC,QACxBK,EAAgBD,EAAiBN,EACvCA,EAAcM,EAEdD,EACGG,OAAQC,GAAMA,EAAEC,gBAChBC,KAAK,CAACC,EAAGC,IAAMjB,EAASkB,IAAIF,EAAEG,QAAUnB,EAASkB,IAAID,EAAEE,SACvDC,QAASC,IACR,GAAIjC,EAAIW,0BAA4BY,EAAe,OAEnD,MAAMW,EAAKD,EAAMF,OACXI,EACJD,EAAGE,QAAQpC,EAAIQ,2BACf0B,EAAGE,QAAQ,YACXF,EAAGE,QAAQ,QACXC,SAASC,KAENvB,EAAgBwB,IAAIJ,IACvBpB,EAAgByB,IAAIL,EAAW,GACjC,MAAMM,EAAQ1B,EAAgBe,IAAIK,GAC5BO,EAAcP,EAAUQ,iBAC5B,IAAI3C,EAAII,kBACRwC,OAEIC,EAAQX,EAAGY,UAAUC,SAAS/C,EAAIM,mBAChCmC,EAAQC,GAAe1C,EAAIG,iBAA/B,KACA+B,EAAGY,UAAUC,SAAS/C,EAAIK,eACtBoC,EAAQC,GAAe1C,EAAIE,aAA/B,KACA,MAEJ8C,sBAAsB,KACpBd,EAAGe,MAAMC,gBAAkBL,EAC3BX,EAAGY,UAAUK,IAAInD,EAAII,gBAErB8B,EAAGkB,iBACD,gBACA,IAAOlB,EAAGe,MAAMC,gBAAkB,MAClC,CAAEG,MAAM,IAGmB,mBAAlBrD,EAAIS,WAA0BT,EAAIS,UAAUyB,KAGzDnB,EAAgByB,IAAIL,EAAWM,EAAQ,GACvCtB,EAASmC,UAAUpB,MAGzB,CAAEjC,UAAWD,EAAIC,YAGbsD,gBAAmBC,IACvBA,EAAIxB,QAASE,IACNtB,EAAS2B,IAAIL,IAAKtB,EAAS4B,IAAIN,EAAIpB,KACxCK,EAASsC,QAAQvB,MAMrB,IAAIwB,EAgBJ,OAlBAH,gBAAgBlB,SAASM,iBAAiB3C,EAAIO,iBAG1CP,EAAIU,mBACNgD,EAAmB,IAAIC,iBAAkBC,IACvC,MAAMC,EAAS,GACfD,EAAU5B,QAAS8B,GACjBA,EAAEC,WAAW/B,QAASgC,IACD,IAAfA,EAAEC,WACFD,EAAEE,QAAQlE,EAAIO,gBAAiBsD,EAAOM,KAAKH,GAC1CH,EAAOM,QAAQH,EAAErB,iBAAiB3C,EAAIO,qBAG3CsD,EAAOjB,QAAQW,gBAAgBM,KAErCH,EAAiBD,QAAQpB,SAASC,KAAM,CAAE8B,WAAW,EAAMC,SAAS,KAG/D,CACL,OAAAC,GACEnD,EAASoD,aACLb,GAAkBA,EAAiBa,YACxC,EACD,OAAAC,GACEjB,gBAAgBlB,SAASM,iBAAiB3C,EAAIO,gBAC/C,EAEL"}