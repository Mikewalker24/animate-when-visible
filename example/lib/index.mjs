function animateWhenVisible(e={}){const t={threshold:.1,staggerDelay:100,staggerDelaySlow:250,animationClass:"awv-visible",staggerClass:"awv-stagger",staggerSlowClass:"awv-stagger-slow",targetSelector:".awv-animate",staggerContainerSelector:".awv-stagger-container",onVisible:null,observeMutations:!0,animateOnScrollDownOnly:!1,...e},s=new Map;let a=0;const n=new Map;let o=window.scrollY;const r=new IntersectionObserver(e=>{const a=window.scrollY,l=a>o;o=a,e.filter(e=>e.isIntersecting).sort((e,t)=>s.get(e.target)-s.get(t.target)).forEach(e=>{if(t.animateOnScrollDownOnly&&!l)return;const s=e.target,a=s.closest(t.staggerContainerSelector)||s.closest("section")||s.closest("nav")||document.body;n.has(a)||n.set(a,0);const o=n.get(a),i=a.querySelectorAll(`.${t.animationClass}`).length,c=s.classList.contains(t.staggerSlowClass)?(o-i)*t.staggerDelaySlow+"ms":s.classList.contains(t.staggerClass)?(o-i)*t.staggerDelay+"ms":"0ms";requestAnimationFrame(()=>{s.style.transitionDelay=c,s.classList.add(t.animationClass),s.addEventListener("transitionend",()=>s.style.transitionDelay="0ms",{once:!0}),"function"==typeof t.onVisible&&t.onVisible(s)}),n.set(a,o+1),r.unobserve(s)})},{threshold:t.threshold}),observeElements=e=>{e.forEach(e=>{s.has(e)||s.set(e,a++),r.observe(e)})};let l;return observeElements(document.querySelectorAll(t.targetSelector)),t.observeMutations&&(l=new MutationObserver(e=>{const s=[];e.forEach(e=>e.addedNodes.forEach(e=>{1===e.nodeType&&(e.matches(t.targetSelector)?s.push(e):s.push(...e.querySelectorAll(t.targetSelector)))})),s.length&&observeElements(s)}),l.observe(document.body,{childList:!0,subtree:!0})),{destroy(){r.disconnect(),l&&l.disconnect()},refresh(){observeElements(document.querySelectorAll(t.targetSelector))}}}export{animateWhenVisible as default};
//# sourceMappingURL=index.mjs.map
